{"ast":null,"code":"'use client';\n\nimport { useState } from 'react';\nfunction useSteps(props = {}) {\n  const {\n    index = 0,\n    count\n  } = props;\n  const [activeStep, setActiveStep] = useState(index);\n  const maxStep = typeof count === \"number\" ? count - 1 : 0;\n  const activeStepPercent = activeStep / maxStep;\n  return {\n    activeStep,\n    setActiveStep,\n    activeStepPercent,\n    isActiveStep(step) {\n      return step === activeStep;\n    },\n    isCompleteStep(step) {\n      return step < activeStep;\n    },\n    isIncompleteStep(step) {\n      return step > activeStep;\n    },\n    getStatus(step) {\n      if (step < activeStep) return \"complete\";\n      if (step > activeStep) return \"incomplete\";\n      return \"active\";\n    },\n    goToNext() {\n      setActiveStep(step => {\n        return typeof count === \"number\" ? Math.min(count, step + 1) : step + 1;\n      });\n    },\n    goToPrevious() {\n      setActiveStep(step => Math.max(0, step - 1));\n    }\n  };\n}\nexport { useSteps };","map":{"version":3,"names":["useState","useSteps","props","index","count","activeStep","setActiveStep","maxStep","activeStepPercent","isActiveStep","step","isCompleteStep","isIncompleteStep","getStatus","goToNext","Math","min","goToPrevious","max"],"sources":["/home/diegopez/sweebterryWeb/client/node_modules/@chakra-ui/react/dist/esm/stepper/use-steps.mjs"],"sourcesContent":["'use client';\nimport { useState } from 'react';\n\nfunction useSteps(props = {}) {\n  const { index = 0, count } = props;\n  const [activeStep, setActiveStep] = useState(index);\n  const maxStep = typeof count === \"number\" ? count - 1 : 0;\n  const activeStepPercent = activeStep / maxStep;\n  return {\n    activeStep,\n    setActiveStep,\n    activeStepPercent,\n    isActiveStep(step) {\n      return step === activeStep;\n    },\n    isCompleteStep(step) {\n      return step < activeStep;\n    },\n    isIncompleteStep(step) {\n      return step > activeStep;\n    },\n    getStatus(step) {\n      if (step < activeStep)\n        return \"complete\";\n      if (step > activeStep)\n        return \"incomplete\";\n      return \"active\";\n    },\n    goToNext() {\n      setActiveStep((step) => {\n        return typeof count === \"number\" ? Math.min(count, step + 1) : step + 1;\n      });\n    },\n    goToPrevious() {\n      setActiveStep((step) => Math.max(0, step - 1));\n    }\n  };\n}\n\nexport { useSteps };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SAASC,QAAQA,CAACC,KAAK,GAAG,CAAC,CAAC,EAAE;EAC5B,MAAM;IAAEC,KAAK,GAAG,CAAC;IAAEC;EAAM,CAAC,GAAGF,KAAK;EAClC,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAACG,KAAK,CAAC;EACnD,MAAMI,OAAO,GAAG,OAAOH,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAG,CAAC,GAAG,CAAC;EACzD,MAAMI,iBAAiB,GAAGH,UAAU,GAAGE,OAAO;EAC9C,OAAO;IACLF,UAAU;IACVC,aAAa;IACbE,iBAAiB;IACjBC,YAAYA,CAACC,IAAI,EAAE;MACjB,OAAOA,IAAI,KAAKL,UAAU;IAC5B,CAAC;IACDM,cAAcA,CAACD,IAAI,EAAE;MACnB,OAAOA,IAAI,GAAGL,UAAU;IAC1B,CAAC;IACDO,gBAAgBA,CAACF,IAAI,EAAE;MACrB,OAAOA,IAAI,GAAGL,UAAU;IAC1B,CAAC;IACDQ,SAASA,CAACH,IAAI,EAAE;MACd,IAAIA,IAAI,GAAGL,UAAU,EACnB,OAAO,UAAU;MACnB,IAAIK,IAAI,GAAGL,UAAU,EACnB,OAAO,YAAY;MACrB,OAAO,QAAQ;IACjB,CAAC;IACDS,QAAQA,CAAA,EAAG;MACTR,aAAa,CAAEI,IAAI,IAAK;QACtB,OAAO,OAAON,KAAK,KAAK,QAAQ,GAAGW,IAAI,CAACC,GAAG,CAACZ,KAAK,EAAEM,IAAI,GAAG,CAAC,CAAC,GAAGA,IAAI,GAAG,CAAC;MACzE,CAAC,CAAC;IACJ,CAAC;IACDO,YAAYA,CAAA,EAAG;MACbX,aAAa,CAAEI,IAAI,IAAKK,IAAI,CAACG,GAAG,CAAC,CAAC,EAAER,IAAI,GAAG,CAAC,CAAC,CAAC;IAChD;EACF,CAAC;AACH;AAEA,SAAST,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}